name: Playwright Tests
description: Run E2E tests using Playwright
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  test:
     # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: node:20-bookworm-slim
    timeout-minutes: 60
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD:  ${{ vars.POSTGRES_PASSWORD}}
          POSTGRES_USER: ${{ vars.POSTGRES_USER}}
          POSTGRES_DB: ${{ vars.POSTGRES_DB }}
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    
    env:
      SESSION_SECRET: ${{ secrets.SESSION_SECRET}}
      JWT_SECRET: ${{ secrets.JWT_SECRET}}
      PASSWORD_KEY: ${{ secrets.PASSWORD_KEY}}
      DATABASE_URL: postgres://${{ vars.POSTGRES_USER }}:${{ vars.POSTGRES_PASSWORD }}@postgres:5432/${{ vars.POSTGRES_DB }}
      HOST: localhost
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x

      - name: Install dependencies
        run: npm ci

      - name: Create DB
        run: npm run drizzle:migrate

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
        if: ${{ !failure() }}

      - name: Run Playwright tests
        run: npx playwright test

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
